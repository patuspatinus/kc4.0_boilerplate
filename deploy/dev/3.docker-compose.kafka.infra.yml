version: "3.7"

services:

  kafka0:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka0
    # container_name: kafka0
    ports:
      - "${KAFKA_0_EXTERNAL_PUBLIC_PORT}:${KAFKA_0_EXTERNAL_PORT}"
      - "${KAFKA_0_INTERNAL_PUBLIC_PORT}:${KAFKA_0_INTERNAL_PORT}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_0_KAFKA_BROKER_ID}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_0_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_0_KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_0_KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${KAFKA_0_KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: ${KAFKA_0_KAFKA_TRANSACTION_STATE_LOG_MIN_ISR}
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${KAFKA_0_KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR}
      KAFKA_JMX_PORT: ${KAFKA_0_KAFKA_JMX_PORT}
      KAFKA_JMX_OPTS: ${KAFKA_0_KAFKA_JMX_OPTS}
      KAFKA_JMX_HOSTNAME: ${KAFKA_0_KAFKA_JMX_HOSTNAME}
      KAFKA_PROCESS_ROLES: ${KAFKA_0_KAFKA_PROCESS_ROLES}
      KAFKA_NODE_ID: ${KAFKA_0_KAFKA_NODE_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: ${KAFKA_0_KAFKA_CONTROLLER_QUORUM_VOTERS}
      KAFKA_LISTENERS: ${KAFKA_0_KAFKA_LISTENERS}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_0_KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_CONTROLLER_LISTENER_NAMES: ${KAFKA_0_KAFKA_CONTROLLER_LISTENER_NAMES}
      KAFKA_LOG_DIRS: ${KAFKA_0_KAFKA_LOG_DIRS}
      # KAFKA_SECURITY_PROTOCOL: ${KAFKA_0_KAFKA_SECURITY_PROTOCOL}
      # KAFKA_SSL_ENABLED_MECHANISMS: ${KAFKA_0_KAFKA_SSL_ENABLED_MECHANISMS}
      # KAFKA_SSL_KEYSTORE_FILENAME: ${KAFKA_0_KAFKA_SSL_KEYSTORE_FILENAME}
      # KAFKA_SSL_KEYSTORE_CREDENTIALS: ${KAFKA_0_KAFKA_SSL_KEYSTORE_CREDENTIALS}
      # KAFKA_SSL_KEY_CREDENTIALS: ${KAFKA_0_KAFKA_SSL_KEY_CREDENTIALS}
      # KAFKA_SSL_TRUSTSTORE_FILENAME: ${KAFKA_0_KAFKA_SSL_TRUSTSTORE_FILENAME}
      # KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ${KAFKA_0_KAFKA_SSL_TRUSTSTORE_CREDENTIALS}
      # KAFKA_SSL_CLIENT_AUTH: 'required'
      # KAFKA_SSL_CLIENT_AUTH: ${KAFKA_0_KAFKA_SSL_CLIENT_AUTH}
      # KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ${KAFKA_0_KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM}
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: ${KAFKA_0_KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR}
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: ${KAFKA_0_KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_ENABLE_SSL_CERTIFICATE_VERIFICATION: 'false'
    volumes:
      - ./data/kafka/kafka0/data:/var/lib/kafka/data
      - ./data/kafka/kafka0/logs:/tmp/kraft-combined-logs
      - ./scripts/kafka/update_run.sh:/tmp/update_run.sh
      - ./ssl/kafka/secrets/:/etc/kafka/secrets/
      - ./ssl/kafka/truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    user: root
    env_file: 
      - ./.env
    networks:
      - kcutp_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    # container_name: kafka0
    ports:
      - "${KAFKA_1_EXTERNAL_PUBLIC_PORT}:${KAFKA_1_EXTERNAL_PORT}"
      - "${KAFKA_1_INTERNAL_PUBLIC_PORT}:${KAFKA_1_INTERNAL_PORT}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_1_KAFKA_BROKER_ID}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_1_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_1_KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_1_KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${KAFKA_1_KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: ${KAFKA_1_KAFKA_TRANSACTION_STATE_LOG_MIN_ISR}
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${KAFKA_1_KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR}
      KAFKA_JMX_PORT: ${KAFKA_1_KAFKA_JMX_PORT}
      KAFKA_JMX_OPTS: ${KAFKA_1_KAFKA_JMX_OPTS}
      KAFKA_JMX_HOSTNAME: ${KAFKA_1_KAFKA_JMX_HOSTNAME}
      KAFKA_PROCESS_ROLES: ${KAFKA_1_KAFKA_PROCESS_ROLES}
      KAFKA_NODE_ID: ${KAFKA_1_KAFKA_NODE_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: ${KAFKA_1_KAFKA_CONTROLLER_QUORUM_VOTERS}
      KAFKA_LISTENERS: ${KAFKA_1_KAFKA_LISTENERS}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_1_KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_CONTROLLER_LISTENER_NAMES: ${KAFKA_1_KAFKA_CONTROLLER_LISTENER_NAMES}
      KAFKA_LOG_DIRS: ${KAFKA_1_KAFKA_LOG_DIRS}
      # KAFKA_SECURITY_PROTOCOL: ${KAFKA_1_KAFKA_SECURITY_PROTOCOL}
      # KAFKA_SSL_ENABLED_MECHANISMS: ${KAFKA_1_KAFKA_SSL_ENABLED_MECHANISMS}
      # KAFKA_SSL_KEYSTORE_FILENAME: ${KAFKA_1_KAFKA_SSL_KEYSTORE_FILENAME}
      # KAFKA_SSL_KEYSTORE_CREDENTIALS: ${KAFKA_1_KAFKA_SSL_KEYSTORE_CREDENTIALS}
      # KAFKA_SSL_KEY_CREDENTIALS: ${KAFKA_1_KAFKA_SSL_KEY_CREDENTIALS}
      # KAFKA_SSL_TRUSTSTORE_FILENAME: ${KAFKA_1_KAFKA_SSL_TRUSTSTORE_FILENAME}
      # KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ${KAFKA_1_KAFKA_SSL_TRUSTSTORE_CREDENTIALS}
      # KAFKA_SSL_CLIENT_AUTH: 'required'
      # KAFKA_SSL_CLIENT_AUTH: ${KAFKA_1_KAFKA_SSL_CLIENT_AUTH}
      # KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ${KAFKA_1_KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM}
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: ${KAFKA_1_KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR}
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: ${KAFKA_1_KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_ENABLE_SSL_CERTIFICATE_VERIFICATION: 'false'
    volumes:
      - ./data/kafka/kafka1/data:/var/lib/kafka/data
      - ./data/kafka/kafka1/logs:/tmp/kraft-combined-logs
      - ./scripts/kafka/update_run.sh:/tmp/update_run.sh
      - ./ssl/kafka/secrets/:/etc/kafka/secrets/
      - ./ssl/kafka/truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    user: root
    env_file: 
      - ./.env
    networks:
      - kcutp_network

  kafka-schema-registry0:
    image: confluentinc/cp-schema-registry:7.3.0
    # hostname: kafka-schema-registry0
    # container_name: kafka-schema-registry0
    depends_on:
      # - zoo0
      - kafka0
    ports:
      - "${KAFKA_SCHEMA_REGISTRY_0_PUBLIC_PORT}:${KAFKA_SCHEMA_REGISTRY_0_INTERNAL_PORT}"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS}
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD}
      SCHEMA_REGISTRY_HOST_NAME: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_HOST_NAME}
      SCHEMA_REGISTRY_LISTENERS: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_LISTENERS}
      # SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL}

      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL}
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL}
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_KAFKASTORE_TOPIC}
      # SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION}
      # SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION}
      # SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD}
      # SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION}
      # SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD}
      # SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_0_SCHEMA_REGISTRY_SSL_KEY_PASSWORD}
    volumes:
      - ./data/kafka/kafka-schema-registry0/data:/var/lib/kafka/data
      - ./ssl/kafka/truststore/kafka.truststore.jks:/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/kafka.keystore.jks
    user: root
    env_file: 
      - ./.env
    networks:
      - kcutp_network

  kafka-schema-registry1:
    image: confluentinc/cp-schema-registry:7.3.0
    # hostname: kafka-schema-registry0
    # container_name: kafka-schema-registry0
    depends_on:
      # - zoo0
      - kafka1
    ports:
      - "${KAFKA_SCHEMA_REGISTRY_1_PUBLIC_PORT}:${KAFKA_SCHEMA_REGISTRY_1_INTERNAL_PORT}"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS}
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD}
      # SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD}
      SCHEMA_REGISTRY_HOST_NAME: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_HOST_NAME}
      SCHEMA_REGISTRY_LISTENERS: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_LISTENERS}
      # SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL}

      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL}
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL}
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_KAFKASTORE_TOPIC}
      # SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION}
      # SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION}
      # SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD}
      # SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION}
      # SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD}
      # SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${KAFKA_SCHEMA_REGISTRY_1_SCHEMA_REGISTRY_SSL_KEY_PASSWORD}
    volumes:
      - ./data/kafka/kafka-schema-registry1/data:/var/lib/kafka/data
      - ./ssl/kafka/truststore/kafka.truststore.jks:/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/kafka.keystore.jks
    user: root
    env_file: 
      - ./.env
    networks:
      - kcutp_network

  kafka-connect0:
    image: confluentinc/cp-kafka-connect:7.3.0
    hostname: kafka-connect0
    ports:
      - "${KAFKA_CONNECT_0_PUBLIC_PORT}:${KAFKA_CONNECT_0_INTERNAL_PORT}"
    depends_on:
      - kafka0
      - kafka-schema-registry0
    environment:
      CONNECT_BOOTSTRAP_SERVERS: ${KAFKA_CONNECT_0_CONNECT_BOOTSTRAP_SERVERS}
      CONNECT_GROUP_ID: ${KAFKA_CONNECT_0_GROUP_ID}
      CONNECT_CONFIG_STORAGE_TOPIC: ${KAFKA_CONNECT_0_CONFIG_STORAGE_TOPIC}
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: ${KAFKA_CONNECT_0_CONFIG_STORAGE_REPLICATION_FACTOR}
      CONNECT_OFFSET_STORAGE_TOPIC: ${KAFKA_CONNECT_0_OFFSET_STORAGE_TOPIC}
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: ${KAFKA_CONNECT_0_OFFSET_STORAGE_REPLICATION_FACTOR}
      CONNECT_STATUS_STORAGE_TOPIC: ${KAFKA_CONNECT_0_STATUS_STORAGE_TOPIC}
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: ${KAFKA_CONNECT_0_STATUS_STORAGE_REPLICATION_FACTOR}
      CONNECT_KEY_CONVERTER: ${KAFKA_CONNECT_0_KEY_CONVERTER}
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: ${KAFKA_CONNECT_0_KEY_CONVERTER_SCHEMA_REGISTRY_URL}
      CONNECT_VALUE_CONVERTER: ${KAFKA_CONNECT_0_VALUE_CONVERTER}
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: ${KAFKA_CONNECT_0_VALUE_CONVERTER_SCHEMA_REGISTRY_URL}
      CONNECT_INTERNAL_KEY_CONVERTER: ${KAFKA_CONNECT_0_INTERNAL_KEY_CONVERTER}
      CONNECT_INTERNAL_VALUE_CONVERTER: ${KAFKA_CONNECT_0_INTERNAL_VALUE_CONVERTER}
      CONNECT_REST_ADVERTISED_HOST_NAME: ${KAFKA_CONNECT_0_REST_ADVERTISED_HOST_NAME}
      CONNECT_PLUGIN_PATH: ${KAFKA_CONNECT_0_PLUGIN_PATH}
      # CONNECT_SECURITY_PROTOCOL: ${KAFKA_CONNECT_0_CONNECT_SECURITY_PROTOCOL}
      # CONNECT_SSL_KEYSTORE_LOCATION: ${KAFKA_CONNECT_0_CONNECT_SSL_KEYSTORE_LOCATION}
      # CONNECT_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_0_CONNECT_SSL_KEY_PASSWORD}
      # CONNECT_SSL_KEYSTORE_PASSWORD: ${KAFKA_CONNECT_0_CONNECT_SSL_KEYSTORE_PASSWORD}
      # CONNECT_SSL_TRUSTSTORE_LOCATION: ${KAFKA_CONNECT_0_CONNECT_SSL_TRUSTSTORE_LOCATION}
      # CONNECT_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_CONNECT_0_CONNECT_SSL_TRUSTSTORE_PASSWORD}
      # CONNECT_SSL_CLIENT_AUTH: ${KAFKA_CONNECT_0_CONNECT_SSL_CLIENT_AUTH}
      # CONNECT_REST_ADVERTISED_LISTENER: ${KAFKA_CONNECT_0_CONNECT_REST_ADVERTISED_LISTENER}
      # CONNECT_LISTENERS: ${KAFKA_CONNECT_0_CONNECT_LISTENERS}
    volumes:
      - ./ssl/kafka/truststore/kafka.truststore.jks:/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/kafka.keystore.jks
      - ./lib/kafka-connect/confluentinc-kafka-connect-jdbc-10.6.3/:/usr/share/java/kafka-connect-jdbc
      # - ./lib/kafka-connect/confluentinc-kafka-connect-jdbc-10.6.3/lib:/usr/share/java/plugins
    networks:
      - kcutp_network

  # ksqldb0:
  #   image: confluentinc/cp-ksqldb-server:7.3.0
  #   # hostname: ksqldb0
  #   # container_name: ksqldb0
  #   depends_on:
  #     - kafka0
  #     - kafka-connect0
  #     - kafka-schema-registry0
  #   ports:
  #     - "${KSQLDB_SERVER_0_PUBLIC_PORT}:${KSQLDB_SERVER_0_INTERNAL_PORT}"
  #   environment:
  #     KSQL_CUB_KAFKA_TIMEOUT: ${KSQLDB_SERVER_0_KSQL_CUB_KAFKA_TIMEOUT}
  #     KSQL_LISTENERS: ${KSQLDB_SERVER_0_KSQL_LISTENERS}
  #     KSQL_BOOTSTRAP_SERVERS: ${KSQLDB_SERVER_0_KSQL_BOOTSTRAP_SERVERS}
  #     KSQL_SECURITY_PROTOCOL: ${KSQLDB_SERVER_0_KSQL_SECURITY_PROTOCOL}
  #     KSQL_SSL_TRUSTSTORE_LOCATION: ${KSQLDB_SERVER_0_KSQL_SSL_TRUSTSTORE_LOCATION}
  #     KSQL_SSL_TRUSTSTORE_PASSWORD: ${KSQLDB_SERVER_0_KSQL_SSL_TRUSTSTORE_PASSWORD}
  #     KSQL_SSL_KEYSTORE_LOCATION: ${KSQLDB_SERVER_0_KSQL_SSL_KEYSTORE_LOCATION}
  #     KSQL_SSL_KEYSTORE_PASSWORD: ${KSQLDB_SERVER_0_KSQL_SSL_KEYSTORE_PASSWORD}
  #     KSQL_SSL_KEY_PASSWORD: ${KSQLDB_SERVER_0_KSQL_SSL_KEY_PASSWORD}
  #     KSQL_SSL_CLIENT_AUTHENTICATION: ${KSQLDB_SERVER_0_KSQL_SSL_CLIENT_AUTHENTICATION}
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: ${KSQLDB_SERVER_0_KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE}
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: ${KSQLDB_SERVER_0_KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE}
  #     KSQL_KSQL_CONNECT_URL: ${KSQLDB_SERVER_0_KSQL_KSQL_CONNECT_URL}
  #     KSQL_KSQL_SCHEMA_REGISTRY_URL: ${KSQLDB_SERVER_0_KSQL_KSQL_SCHEMA_REGISTRY_URL}
  #     KSQL_KSQL_SERVICE_ID: ${KSQLDB_SERVER_0_KSQL_KSQL_SERVICE_ID}
  #     KSQL_KSQL_HIDDEN_TOPICS: ${KSQLDB_SERVER_0_KSQL_KSQL_HIDDEN_TOPICS}
  #     KSQL_CACHE_MAX_BYTES_BUFFERING: ${KSQLDB_SERVER_0_KSQL_CACHE_MAX_BYTES_BUFFERING}
  #   volumes:
  #     - ./ssl/kafka/truststore/kafka.truststore.jks:/kafka.truststore.jks
  #     - ./ssl/kafka/keystore/kafka.keystore.jks:/kafka.keystore.jks
  #   env_file: 
  #     - ./.env
  #   networks:
  #     - kcutp_network

  kafka-ui:
    # container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PUBLIC_PORT}:${KAFKA_UI_PORT}"
    depends_on:
      - kafka0
      - kafka-schema-registry0
      - kafka-connect0
      # - zoo0
      # - ksqldb0
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_UI_KAFKA_CLUSTERS_0_NAME}
      # KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_UI_KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
      KAFKA_CLUSTERS_0_METRICS_PORT: ${KAFKA_UI_KAFKA_CLUSTERS_0_METRICS_PORT}
      # KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION}
      # KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD}
      # KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION}
      # KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD}
      # KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ${KAFKA_UI_KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM} # DISABLE COMMON NAME VERIFICATION
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: ${KAFKA_UI_KAFKA_CLUSTERS_0_SCHEMAREGISTRY}
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_KEYSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_KEYSTORELOCATION}
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_KEYSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_KEYSTOREPASSWORD}
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_TRUSTSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_TRUSTSTORELOCATION}
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_TRUSTSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_SCHEMAREGISTRYSSL_TRUSTSTOREPASSWORD}

      # KAFKA_CLUSTERS_0_KSQLDBSERVER: ${KAFKA_UI_KAFKA_CLUSTERS_0_KSQLDBSERVER}
      # KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_KEYSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_KEYSTORELOCATION}
      # KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_KEYSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_KEYSTOREPASSWORD}
      # KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_TRUSTSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_TRUSTSTORELOCATION}
      # KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_TRUSTSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_KSQLDBSERVERSSL_TRUSTSTOREPASSWORD}

      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME}
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS}
      
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_KEYSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_KEYSTORELOCATION}
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_KEYSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_KEYSTOREPASSWORD}
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_TRUSTSTORELOCATION: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_TRUSTSTORELOCATION}
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_TRUSTSTOREPASSWORD: ${KAFKA_UI_KAFKA_CLUSTERS_0_KAFKACONNECT_0_TRUSTSTOREPASSWORD}

      # SERVER_SERVLET_CONTEXT_PATH: ${KAFKA_UI_SERVER_SERVLET_CONTEXT_PATH}
      
      KAFKA_CLUSTERS_1_NAME: ${KAFKA_UI_KAFKA_CLUSTERS_1_NAME}
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: ${KAFKA_UI_KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS}
      KAFKA_CLUSTERS_1_METRICS_PORT: ${KAFKA_UI_KAFKA_CLUSTERS_1_METRICS_PORT}
      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: ${KAFKA_UI_KAFKA_CLUSTERS_1_SCHEMAREGISTRY}
      
      AUTH_TYPE: ${KAFKA_UI_AUTH_TYPE}
      SPRING_SECURITY_USER_NAME: ${KAFKA_UI_SPRING_SECURITY_USER_NAME}
      SPRING_SECURITY_USER_PASSWORD: ${KAFKA_UI_SPRING_SECURITY_USER_PASSWORD}    
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./ssl/kafka/truststore/kafka.truststore.jks:/kafka.truststore.jks
      - ./ssl/kafka/keystore/kafka.keystore.jks:/kafka.keystore.jks
    env_file: 
      - ./.env
    networks:
      - kcutp_network
